verification result:
spin -a  assignment1.pml
ltl leaveMap: (<> ((isInMap[0]==0))) && (<> ((isInMap[1]==0)))
gcc -DMEMLIM=1024 -O2 -DXUSAFE -w -o pan pan.c
./pan -m10000  -a
Pid: 58553

(Spin Version 6.4.5 -- 1 January 2016)
	+ Partial Order Reduction

Full statespace search for:
	never claim         	+ (leaveMap)
	assertion violations	+ (if within scope of claim)
	acceptance   cycles 	+ (fairness disabled)
	invalid end states	- (disabled by never claim)

State-vector 220 byte, depth reached 0, errors: 0
        1 states, stored
        0 states, matched
        1 transitions (= stored+matched)
        0 atomic steps
hash conflicts:         0 (resolved)

Stats on memory usage (in Megabytes):
    0.000	equivalent memory usage for states (stored*(State-vector + overhead))
    0.262	actual memory usage for states
  128.000	memory used for hash table (-w24)
    0.534	memory used for DFS stack (-m10000)
  128.730	total actual memory usage


unreached in proctype car
	assignment1.pml:305, state 2, "currentLocation[_pid] = 1"
	assignment1.pml:306, state 3, "currentDirection[_pid] = 1"
	assignment1.pml:307, state 4, "randomSpeed?currentSpeed[_pid]"
	assignment1.pml:308, state 5, "isInMap[_pid] = 1"
	assignment1.pml:312, state 7, "currentRoad[_pid] = 0"
	assignment1.pml:313, state 9, "currentRoad[_pid] = 2"
	assignment1.pml:314, state 11, "currentRoad[_pid] = 4"
	assignment1.pml:315, state 13, "currentRoad[_pid] = 6"
	assignment1.pml:312, state 14, "((entryPoint==A))"
	assignment1.pml:312, state 14, "((entryPoint==B))"
	assignment1.pml:312, state 14, "((entryPoint==C))"
	assignment1.pml:312, state 14, "((entryPoint==D))"
	assignment1.pml:322, state 16, "randomSpeed?currentSpeed[_pid]"
	assignment1.pml:28, state 18, "incremental[_pid] = 1"
	assignment1.pml:29, state 20, "incremental[_pid] = -(1)"
	assignment1.pml:33, state 23, "incremental[_pid] = ((incremental[_pid]*currentSpeed[_pid])/5)"
	assignment1.pml:36, state 24, "currentLocation[_pid] = (currentLocation[_pid]+incremental[_pid])"
	assignment1.pml:39, state 25, "printf('\n\nDEBUG:::::::: \ncar: %d \nLocation: %d \nRoad: %d\n LengthOfRoad: %d\n incremental: %d \nSpeed: %d\n\n\n',_pid,currentLocation[_pid],currentRoad[_pid],lengthOfRoads[currentRoad[_pid]],incremental[_pid],currentSpeed[_pid])"
	assignment1.pml:48, state 28, "takeTurnTo[0]?turnTo[_pid]"
	assignment1.pml:52, state 30, "currentRoad[_pid] = 1"
	assignment1.pml:53, state 31, "currentLocation[_pid] = 1"
	assignment1.pml:54, state 32, "currentDirection[_pid] = 1"
	assignment1.pml:57, state 34, "currentRoad[_pid] = 3"
	assignment1.pml:58, state 35, "currentLocation[_pid] = 1"
	assignment1.pml:59, state 36, "currentDirection[_pid] = 1"
	assignment1.pml:62, state 38, "currentRoad[_pid] = 2"
	assignment1.pml:63, state 39, "currentLocation[_pid] = lengthOfRoads[2]"
	assignment1.pml:64, state 40, "currentDirection[_pid] = 0"
	assignment1.pml:65, state 42, "assert(1)"
	assignment1.pml:50, state 43, "((turnTo[_pid]==1))"
	assignment1.pml:50, state 43, "((turnTo[_pid]==2))"
	assignment1.pml:50, state 43, "((turnTo[_pid]==3))"
	assignment1.pml:50, state 43, "else"
	assignment1.pml:71, state 46, "isInMap[_pid] = 0"
	assignment1.pml:46, state 48, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:46, state 48, "((currentLocation[_pid]<0))"
	assignment1.pml:46, state 48, "else"
	assignment1.pml:82, state 52, "takeTurnTo[1]?turnTo[_pid]"
	assignment1.pml:86, state 54, "currentRoad[_pid] = 6"
	assignment1.pml:87, state 55, "currentLocation[_pid] = lengthOfRoads[6]"
	assignment1.pml:88, state 56, "currentDirection[_pid] = 0"
	assignment1.pml:91, state 58, "currentRoad[_pid] = 5"
	assignment1.pml:92, state 59, "currentLocation[_pid] = lengthOfRoads[5]"
	assignment1.pml:93, state 60, "currentDirection[_pid] = 0"
	assignment1.pml:84, state 62, "((turnTo[_pid]==2))"
	assignment1.pml:84, state 62, "((turnTo[_pid]==3))"
	assignment1.pml:84, state 62, "else"
	assignment1.pml:99, state 65, "takeTurnTo[0]?turnTo[_pid]"
	assignment1.pml:103, state 67, "currentRoad[_pid] = 3"
	assignment1.pml:104, state 68, "currentLocation[_pid] = 1"
	assignment1.pml:105, state 69, "currentDirection[_pid] = 1"
	assignment1.pml:108, state 71, "currentRoad[_pid] = 2"
	assignment1.pml:109, state 72, "currentDirection[_pid] = 0"
	assignment1.pml:110, state 73, "currentLocation[_pid] = lengthOfRoads[2]"
	assignment1.pml:113, state 75, "currentRoad[_pid] = 0"
	assignment1.pml:114, state 76, "currentDirection[_pid] = 0"
	assignment1.pml:115, state 77, "currentLocation[_pid] = lengthOfRoads[0]"
	assignment1.pml:101, state 79, "((turnTo[_pid]==1))"
	assignment1.pml:101, state 79, "((turnTo[_pid]==2))"
	assignment1.pml:101, state 79, "((turnTo[_pid]==3))"
	assignment1.pml:101, state 79, "else"
	assignment1.pml:80, state 82, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:80, state 82, "((currentLocation[_pid]<0))"
	assignment1.pml:80, state 82, "else"
	assignment1.pml:128, state 86, "takeTurnTo[0]?turnTo[_pid]"
	assignment1.pml:132, state 88, "currentRoad[_pid] = 0"
	assignment1.pml:133, state 89, "currentDirection[_pid] = 0"
	assignment1.pml:134, state 90, "currentLocation[_pid] = lengthOfRoads[0]"
	assignment1.pml:137, state 92, "currentRoad[_pid] = 1"
	assignment1.pml:138, state 93, "currentDirection[_pid] = 1"
	assignment1.pml:139, state 94, "currentLocation[_pid] = 1"
	assignment1.pml:142, state 96, "currentRoad[_pid] = 3"
	assignment1.pml:143, state 97, "currentDirection[_pid] = 1"
	assignment1.pml:144, state 98, "currentLocation[_pid] = 1"
	assignment1.pml:130, state 100, "((turnTo[_pid]==1))"
	assignment1.pml:130, state 100, "((turnTo[_pid]==2))"
	assignment1.pml:130, state 100, "((turnTo[_pid]==3))"
	assignment1.pml:130, state 100, "else"
	assignment1.pml:150, state 103, "isInMap[_pid] = 0"
	assignment1.pml:126, state 105, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:126, state 105, "((currentLocation[_pid]<0))"
	assignment1.pml:126, state 105, "else"
	assignment1.pml:160, state 109, "takeTurnTo[1]?turnTo[_pid]"
	assignment1.pml:164, state 111, "currentRoad[_pid] = 5"
	assignment1.pml:165, state 112, "currentDirection[_pid] = 1"
	assignment1.pml:166, state 113, "currentLocation[_pid] = 1"
	assignment1.pml:169, state 115, "currentRoad[_pid] = 4"
	assignment1.pml:170, state 116, "currentDirection[_pid] = 0"
	assignment1.pml:171, state 117, "currentLocation[_pid] = lengthOfRoads[4]"
	assignment1.pml:162, state 119, "((turnTo[_pid]==2))"
	assignment1.pml:162, state 119, "((turnTo[_pid]==3))"
	assignment1.pml:162, state 119, "else"
	assignment1.pml:177, state 122, "takeTurnTo[0]?turnTo[_pid]"
	assignment1.pml:181, state 124, "currentRoad[_pid] = 2"
	assignment1.pml:182, state 125, "currentDirection[_pid] = 0"
	assignment1.pml:183, state 126, "currentLocation[_pid] = lengthOfRoads[2]"
	assignment1.pml:186, state 128, "currentRoad[_pid] = 0"
	assignment1.pml:187, state 129, "currentDirection[_pid] = 0"
	assignment1.pml:188, state 130, "currentLocation[_pid] = lengthOfRoads[0]"
	assignment1.pml:191, state 132, "currentRoad[_pid] = 1"
	assignment1.pml:192, state 133, "currentDirection[_pid] = 1"
	assignment1.pml:193, state 134, "currentLocation[_pid] = 1"
	assignment1.pml:179, state 135, "((turnTo[_pid]==1))"
	assignment1.pml:179, state 135, "((turnTo[_pid]==2))"
	assignment1.pml:179, state 135, "((turnTo[_pid]==3))"
	assignment1.pml:158, state 138, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:158, state 138, "((currentLocation[_pid]<0))"
	assignment1.pml:158, state 138, "else"
	assignment1.pml:205, state 142, "takeTurnTo[3]?turnTo[_pid]"
	assignment1.pml:209, state 144, "currentRoad[_pid] = 3"
	assignment1.pml:210, state 145, "currentDirection[_pid] = 0"
	assignment1.pml:211, state 146, "currentLocation[_pid] = lengthOfRoads[3]"
	assignment1.pml:214, state 148, "currentRoad[_pid] = 5"
	assignment1.pml:215, state 149, "currentDirection[_pid] = 1"
	assignment1.pml:216, state 150, "currentLocation[_pid] = 1"
	assignment1.pml:207, state 152, "((turnTo[_pid]==1))"
	assignment1.pml:207, state 152, "((turnTo[_pid]==3))"
	assignment1.pml:207, state 152, "else"
	assignment1.pml:221, state 155, "isInMap[_pid] = 0"
	assignment1.pml:203, state 157, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:203, state 157, "((currentLocation[_pid]<0))"
	assignment1.pml:203, state 157, "else"
	assignment1.pml:232, state 161, "takeTurnTo[3]?turnTo[_pid]"
	assignment1.pml:236, state 163, "currentRoad[_pid] = 1"
	assignment1.pml:237, state 164, "currentDirection[_pid] = 0"
	assignment1.pml:238, state 165, "currentLocation[_pid] = lengthOfRoads[1]"
	assignment1.pml:241, state 167, "currentRoad[_pid] = 6"
	assignment1.pml:242, state 168, "currentDirection[_pid] = 0"
	assignment1.pml:243, state 169, "currentLocation[_pid] = lengthOfRoads[6]"
	assignment1.pml:234, state 171, "((turnTo[_pid]==1))"
	assignment1.pml:234, state 171, "((turnTo[_pid]==3))"
	assignment1.pml:234, state 171, "else"
	assignment1.pml:249, state 174, "takeTurnTo[2]?turnTo[_pid]"
	assignment1.pml:253, state 176, "currentRoad[_pid] = 4"
	assignment1.pml:254, state 177, "currentDirection[_pid] = 0"
	assignment1.pml:255, state 178, "currentLocation[_pid] = lengthOfRoads[4]"
	assignment1.pml:258, state 180, "currentRoad[_pid] = 3"
	assignment1.pml:259, state 181, "currentDirection[_pid] = 0"
	assignment1.pml:260, state 182, "currentLocation[_pid] = lengthOfRoads[3]"
	assignment1.pml:251, state 183, "((turnTo[_pid]==1))"
	assignment1.pml:251, state 183, "((turnTo[_pid]==2))"
	assignment1.pml:230, state 186, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:230, state 186, "((currentLocation[_pid]<0))"
	assignment1.pml:230, state 186, "else"
	assignment1.pml:272, state 190, "takeTurnTo[2]?turnTo[_pid]"
	assignment1.pml:276, state 192, "currentRoad[_pid] = 5"
	assignment1.pml:277, state 193, "currentDirection[_pid] = 0"
	assignment1.pml:278, state 194, "currentLocation[_pid] = lengthOfRoads[5]"
	assignment1.pml:281, state 196, "currentRoad[_pid] = 1"
	assignment1.pml:282, state 197, "currentDirection[_pid] = 0"
	assignment1.pml:283, state 198, "currentLocation[_pid] = lengthOfRoads[1]"
	assignment1.pml:274, state 200, "((turnTo[_pid]==1))"
	assignment1.pml:274, state 200, "((turnTo[_pid]==2))"
	assignment1.pml:274, state 200, "else"
	assignment1.pml:288, state 203, "isInMap[_pid] = 0"
	assignment1.pml:270, state 205, "((currentLocation[_pid]>lengthOfRoads[currentRoad[_pid]]))"
	assignment1.pml:270, state 205, "((currentLocation[_pid]<0))"
	assignment1.pml:270, state 205, "else"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==0))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==1))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==2))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==3))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==4))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==5))"
	assignment1.pml:44, state 208, "((currentRoad[_pid]==6))"
	assignment1.pml:44, state 208, "else"
	assignment1.pml:28, state 210, "((currentDirection[_pid]==1))"
	assignment1.pml:28, state 210, "else"
	assignment1.pml:326, state 214, "((isInMap[_pid]==0))"
	assignment1.pml:326, state 214, "else"
	assignment1.pml:330, state 216, "printf('Car %d is riding on road: %d and is at location: %d and has taken the turn: %d',_pid,currentRoad[_pid],currentLocation[_pid],turnTo[_pid])"
	assignment1.pml:334, state 218, "-end-"
	(124 of 218 states)
unreached in proctype getStartingPoint
	assignment1.pml:343, state 8, "-end-"
	(1 of 8 states)
unreached in proctype getTurn1
	assignment1.pml:351, state 7, "-end-"
	(1 of 7 states)
unreached in proctype getTurn2
	assignment1.pml:358, state 6, "-end-"
	(1 of 6 states)
unreached in proctype getTurn3
	assignment1.pml:365, state 6, "-end-"
	(1 of 6 states)
unreached in proctype getTurn4
	assignment1.pml:372, state 6, "-end-"
	(1 of 6 states)
unreached in proctype getSpeed
	assignment1.pml:382, state 6, "-end-"
	(1 of 6 states)
unreached in claim leaveMap
	_spin_nvr.tmp:10, state 10, "(!((isInMap[1]==0)))"
	_spin_nvr.tmp:15, state 15, "(!((isInMap[0]==0)))"
	_spin_nvr.tmp:17, state 18, "-end-"
	(3 of 18 states)

pan: elapsed time 0 seconds
No errors found -- did you verify all claims?


